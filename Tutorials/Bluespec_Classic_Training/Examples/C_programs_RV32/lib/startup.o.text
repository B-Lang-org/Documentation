
lib/startup.o:     file format elf32-littleriscv
lib/startup.o
architecture: riscv:rv32, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000028  00000000  00000000  00000034  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  00000000  00000000  0000005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  0000005c  2**0
                  ALLOC
  3 .debug_line   0000006c  00000000  00000000  0000005c  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .debug_info   00000026  00000000  00000000  000000c8  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  5 .debug_abbrev 00000014  00000000  00000000  000000ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000020  00000000  00000000  00000108  2**3
                  CONTENTS, RELOC, READONLY, DEBUGGING
  7 .debug_str    00000049  00000000  00000000  00000128  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l       .text	00000000 .L0 
00000004 l       .text	00000000 .L0 
00000008 l       .text	00000000 .L0 
0000000c l       .text	00000000 .L0 
00000014 l       .text	00000000 .L0 
00000018 l       .text	00000000 .L0 
0000001c l       .text	00000000 .L0 
00000020 l       .text	00000000 .L0 
00000024 l       .text	00000000 .L0 
00000028 l       .text	00000000 .L0 
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l       .text	00000000 .L0 
00000028 l       .text	00000000 .L0 
00000000 l       .debug_str	00000000 .L0 
0000000e l       .debug_str	00000000 .L0 
0000003b l       .debug_str	00000000 .L0 
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 g       .text	00000000 _reset
00000000         *UND*	00000000 _start



Disassembly of section .text:

00000000 <_reset>:
	.text
	.globl	_reset

_reset:
	li	sp, 0x800f0000
   0:	800f0137          	lui	sp,0x800f0

00000004 <.L0 >:
	// so that the program ends if the value is used
#if __riscv_xlen == 64
	sd	zero, 0(sp)
	sd	zero, -8(sp)
#else
	sw	zero, 0(sp)
   4:	00012023          	sw	zero,0(sp) # 800f0000 <.L0 +0x800effc5>

00000008 <.L0 >:
	sw	zero, -4(sp)
   8:	fe012e23          	sw	zero,-4(sp)

0000000c <.L0 >:
#endif
	// Set MSTATUS
	// Enable MIE and SIE
	// Set FS to 2 = Dirty
	li      s0, 0x600a
   c:	00006437          	lui	s0,0x6
  10:	00a40413          	addi	s0,s0,10 # 600a <.L0 +0x5fcf>

00000014 <.L0 >:
	csrw    mstatus, s0
  14:	30041073          	csrw	mstatus,s0

00000018 <.L0 >:
	// Set MTVEC to an address (also to 0x800f0000?)
	// and place an illegal instruction (0) at that location
	// so that the program ends if there is a trap
	li	s0, 0x800f0000
  18:	800f0437          	lui	s0,0x800f0

0000001c <.L0 >:
#if __riscv_xlen == 64
	sd	zero, 0xC0(s0)
#else
	sw	zero, 0xC0(s0)
  1c:	0c042023          	sw	zero,192(s0) # 800f00c0 <.L0 +0x800f0085>

00000020 <.L0 >:
#endif
	csrw	mtvec, s0
  20:	30541073          	csrw	mtvec,s0

00000024 <.L0 >:
	*/

	// TODO: Use xRET to switch to S or U mode?
	// TODO: (Previous version for v1.7 priv spec set PRV to S
	// TODO: when setting the MSTATUS above.)
	j _start
  24:	fddff06f          	j	0 <_reset>
			24: R_RISCV_JAL	_start
